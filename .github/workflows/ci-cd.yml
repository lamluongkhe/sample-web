name: CI/CD Test

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: self-hosted

    outputs:
      IMAGE_NAME: ${{ steps.build.outputs.IMAGE_NAME }}
      IMAGE_TAG: ${{ steps.build.outputs.IMAGE_TAG }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Docker Image
        id: build
        run: |
          IMAGE_NAME=lamluongkhe/sample-web
          IMAGE_TAG=$(date +%Y%m%d%H%M%S)
          echo "üõ†Ô∏è Building image $IMAGE_NAME:$IMAGE_TAG ..."
          docker build -t $IMAGE_NAME:$IMAGE_TAG .
          docker push $IMAGE_NAME:$IMAGE_TAG
          echo "‚úÖ Image pushed successfully!"
          echo "IMAGE_NAME=$IMAGE_NAME" >> $GITHUB_OUTPUT
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_OUTPUT

  deploy:
    runs-on: self-hosted
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Verify Minikube context
        run: |
          echo "‚û°Ô∏è Checking Kubernetes context..."
          kubectl config use-context minikube
          kubectl get nodes

      - name: Deploy to Minikube using Helm
        run: |
          IMAGE_NAME=${{ needs.build.outputs.IMAGE_NAME }}
          IMAGE_TAG=${{ needs.build.outputs.IMAGE_TAG }}
          echo "üöÄ Deploying $IMAGE_NAME:$IMAGE_TAG ..."
          helm upgrade --install sample-web ./helm \
            --set image.repository=$IMAGE_NAME \
            --set image.tag=$IMAGE_TAG \
            --namespace default --create-namespace

      - name: Verify Deployment
        run: |
          kubectl get pods -n default -l app=sample-web

