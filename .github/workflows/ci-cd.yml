name: CI/CD Test

on:
  push:
    branches:
      - main   # 🔹 Chạy mỗi khi bạn push code lên branch main

jobs:
  build:
    runs-on: self-hosted   # 🔹 Dùng runner local (máy bạn)

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Docker Image
        id: docker_build
        run: |
          IMAGE_NAME=lamluongkhe/sample-web
          IMAGE_TAG=$(date +%Y%m%d%H%M%S)

          echo "🛠️ Building image $IMAGE_NAME:$IMAGE_TAG ..."
          docker build -t $IMAGE_NAME:$IMAGE_TAG .
          docker push $IMAGE_NAME:$IMAGE_TAG

          # Ghi lại biến môi trường để job sau sử dụng
          echo "IMAGE_NAME=$IMAGE_NAME" >> $GITHUB_ENV
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV

          echo "✅ Image pushed successfully: $IMAGE_NAME:$IMAGE_TAG"

  deploy:
    runs-on: self-hosted     # 🔹 Cũng chạy trên runner local
    needs: build             # 🔹 Chạy sau khi job build hoàn tất

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Verify Minikube context
        run: |
          echo "➡️ Checking Kubernetes context..."
          kubectl config use-context minikube
          kubectl get nodes

      - name: Deploy to Minikube using Helm
        run: |
          echo "🚀 Deploying to Minikube with Helm..."
          helm upgrade --install sample-web ./helm \
            --set image.repository=${{ env.IMAGE_NAME }} \
            --set image.tag=${{ env.IMAGE_TAG }} \
            --namespace default --create-namespace

          echo "✅ Helm deployment completed!"

      - name: Verify Deployment
        run: |
          echo "🔍 Checking deployed image..."
          kubectl get deploy sample-web -o yaml | grep image:
          echo "🔍 Pods status:"
          kubectl get pods -l app=sample-web

